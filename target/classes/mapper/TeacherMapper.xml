<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.teachermanage.mapper.TeacherMapper">



    <select id="selectAllByPage" resultType="com.example.teachermanage.entity.Teacher">
        select teacher_code,teacher_name,teacher_title,teacher_entry_time,
               teacher_gender,teacher_birth,teacher_adress,teacher_email,
               teacher_phone,teacher_department,teacher_salary,teacher_qualifications
        from teacher
        where is_delete = 0
        order by teacher_code
        limit #{page.limitIndex}, #{page.pageSize}
    </select>
    <select id="findTeacherRowCount" resultType="java.lang.Integer">
        select count(*) from teacher where is_delete = 0
    </select>

    <select id="selectCourseByDepartment" resultType="com.example.teachermanage.entity.Course">
        select * from course where cid in (
            select cid from department_course where did in (
                select did from department where department = #{teacherDepartment}))
    </select>
    <select id="queryTeacherCourseByTeacherCode" resultType="java.lang.Integer">
        select cid from teacher_course where teacher_code = #{teacherCode}
    </select>
    <select id="getAllHistoryByPage" resultType="com.example.teachermanage.entity.History">
        select * from history
        limit #{page.limitIndex}, #{page.pageSize}
    </select>
    <select id="getHistoryByMoudle" resultType="com.example.teachermanage.entity.History">
        select * from history where history_moudle = #{moudle}
        limit #{page.limitIndex}, #{page.pageSize}
    </select>
    <select id="findHistoryRowCount" resultType="java.lang.Integer">
        select count(*) from history
    </select>
    <select id="findHistoryRowCountByMoudle" resultType="java.lang.Integer">
        select count(*) from history where history_moudle = #{moudle}
    </select>


    <select id="selectByTeacherCode" resultType="com.example.teachermanage.entity.Teacher">
        select * from teacher where teacher_code = #{teacherCode}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from teacher
        where  teacher_id = #{teacherId,jdbcType=INTEGER} 
    </delete>
    <delete id="deleteTeacherCourseByCode">
        DELETE FROM `teacher_course` where teacher_code = #{teacherCode}
    </delete>
    <insert id="insert" keyColumn="teacher_id" keyProperty="teacherId" parameterType="com.example.teachermanage.entity.Teacher" useGeneratedKeys="true">
        insert into teacher
        ( teacher_id,teacher_code
        ,teacher_name,teacher_title,teacher_entry_time
        ,teacher_gender,teacher_birth,teacher_adress
        ,teacher_email,teacher_phone,teacher_department
        ,teacher_salary,teacher_qualifications
        ,is_delete)
        values (#{teacherId,jdbcType=INTEGER},#{teacherCode,jdbcType=VARCHAR}
        ,#{teacherName,jdbcType=VARCHAR},#{teacherTitle,jdbcType=VARCHAR},#{teacherEntryTime,jdbcType=TIMESTAMP}
        ,#{teacherGender,jdbcType=INTEGER},#{teacherBirth,jdbcType=TIMESTAMP},#{teacherAdress,jdbcType=VARCHAR}
        ,#{teacherEmail,jdbcType=VARCHAR},#{teacherPhone,jdbcType=VARCHAR},#{teacherDepartment,jdbcType=VARCHAR}
        ,#{teacherSalary,jdbcType=DECIMAL},#{teacherQualifications,jdbcType=VARCHAR}
        ,0)
    </insert>

    <insert id="insertTeacherCourseByCode">
        INSERT INTO teacher_course VALUES(#{teacherCode},#{cid})
    </insert>

    <update id="updateByTeacherCode" parameterType="com.example.teachermanage.entity.Teacher">
        update teacher
        set
            teacher_name =  #{teacherName},
            teacher_title =  #{teacherTitle},
            teacher_entry_time =  #{teacherEntryTime},
            teacher_gender =  #{teacherGender},
            teacher_birth =  #{teacherBirth},
            teacher_adress =  #{teacherAdress},
            teacher_email =  #{teacherEmail},
            teacher_phone =  #{teacherPhone},
            teacher_department =  #{teacherDepartment},
            teacher_salary =  #{teacherSalary},
            teacher_qualifications =  #{teacherQualifications}
        where   teacher_code = #{teacherCode}
    </update>

    <update id="deleteTeacherByCode" parameterType="java.lang.String">
        update teacher set is_delete = 1 where teacher_code = #{teacherCode}
    </update>
</mapper>
